{"version":3,"sources":["components/navbar.component.js","components/exercises-list.component.js","components/view_individual_hawkers.js","components/add-hawker.jsx","components/firebase-uploader.jsx","components/firebase-uploader-multiple.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","storageBucket","className","to","Component","Exercise","Card","Img","variant","src","exercise","image","Body","Title","name","Text","description","_id","Button","size","block","ExercisesList","deleteExercise","bind","state","exercises","console","log","process","axios","get","then","response","setState","data","catch","error","id","delete","this","filter","el","map","currentexercise","key","CardColumns","exerciseList","IndividualHawker","telephone","title_image","address","date","Date","match","params","duration","images","val","index","original","thumbnail","Row","debug","Col","md","items","CreateExercise","handleUploadSuccess","filename","a","storage","ref","child","getDownloadURL","downloadURL","oldState","filenames","downloadURLs","uploadProgress","isUploading","success","onChangeName","onChangeDescription","onChangeTelephone","onChangeDate","onChangeTitleImage","onChangeImage","onChangeAddress","onSubmit","e","target","value","preventDefault","post","res","window","location","type","required","onChange","selected","accept","randomizeFilename","storageRef","onUploadStart","handleUploadStart","onUploadError","handleUploadError","onUploadSuccess","onProgress","handleProgress","multiple","join","Alert","bulletOnClick","React","avatar","progress","avatarURL","url","App","basename","path","exact","component","AddHawker","FirebaseUploader","FirebaseUploaderMultiple","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a204d197.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from \"firebase\";\n\nexport default class Navbar extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        const config = {\n            apiKey: \"AIzaSyADpZFjXCldn1JzDATAPhO8qYD2oVPPnFQ\",\n            authDomain: \"hawkers-portal.firebaseapp.com\",\n            databaseURL: \"https://hawkers-portal.firebaseio.com\",\n            storageBucket: \"hawkers-portal.appspot.com\"\n        };\n        if (!firebase.apps.length) {\n            firebase.initializeApp(config);\n        }\n        // console.log(config)\n\n\n    }\n\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n                <Link to=\"/\" className=\"navbar-brand\">Hawkers.SG</Link>\n                <div className=\"collpase navbar-collapse\">\n                    <ul className=\"navbar-nav mr-auto\">\n\n                        <li className=\"navbar-item\">\n                            <Link to=\"/\" className=\"nav-link\">Browse memories</Link>\n                        </li>\n\n                        <li className=\"navbar-item\">\n                            <Link to=\"/add-hawker\" className=\"nav-link\">Create memories</Link>\n                        </li>\n\n                        <li className=\"navbar-item\">\n                            <Link to=\"/firebase-uploader\" className=\"nav-link\"><b>Single </b>Firebase Uploader</Link>\n                        </li>\n\n                        <li className=\"navbar-item\">\n                            <Link to=\"/firebase-uploader-multiple\" className=\"nav-link\"><b>Multiple </b>Firebase Uploader</Link>\n                        </li>\n\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport axios from 'axios';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nconst Exercise = props => (\n    // <tr>\n    //     <td>{props.exercise.name}</td>\n    //     <td>{props.exercise.description}</td>\n    //     <td>{props.exercise.address}</td>\n    //     <td>{props.exercise.date.substring(0, 10)}</td>\n    //     <td>\n    //         <Link to={\"/edit/\" + props.exercise._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteExercise(props.exercise._id) }}>delete</a>\n    //     </td>\n    // </tr>\n\n    <Card>\n        <Card.Img variant=\"top\" src={props.exercise.image[0]} />\n        <Card.Body>\n            <Card.Title>{props.exercise.name}</Card.Title>\n            <Card.Text>\n                {props.exercise.description}\n            </Card.Text>\n            {/* Button to hyperlink to specific user page */}\n            <Link to={\"/hawkers/\" + props.exercise._id}><Button variant=\"primary\" size=\"lg\" block>View</Button></Link>\n\n        </Card.Body>\n    </Card>\n\n\n)\n\nexport default class ExercisesList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.deleteExercise = this.deleteExercise.bind(this)\n\n        this.state = { exercises: [] };\n    }\n\n    componentDidMount() {\n        console.log(process.env.REACT_APP_API_ADD);\n\n        axios.get(process.env.REACT_APP_API_ADD + '/hawkers')\n            .then(response => {\n                this.setState({ exercises: response.data })\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n\n    deleteExercise(id) {\n        axios.delete('http://localhost:5000/exercises/' + id)\n            .then(response => { console.log(response.data) });\n\n        this.setState({\n            exercises: this.state.exercises.filter(el => el._id !== id)\n        })\n    }\n\n    exerciseList() {\n        return this.state.exercises.map(currentexercise => {\n            return <Exercise exercise={currentexercise} deleteExercise={this.deleteExercise} key={currentexercise._id} />;\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Browse all events</h1>\n\n\n                <CardColumns>\n\n                    {/* <table className=\"table\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th>Stall</th>\n                            <th>Description</th>\n                            <th>Address</th>\n                            <th>Date</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody> */}\n                    {this.exerciseList()}\n                    {/* </tbody>\n                </table> */}\n                </CardColumns></div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n// import DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import Image from 'react-bootstrap/Image'\n// import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'\n// import SimpleImageSlider from \"react-simple-image-slider\";\n// import \"~react-image-gallery/styles/css/image-gallery.css\";\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css'\n\nexport default class IndividualHawker extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            description: '',\n            telephone: '',\n            title_image: '',\n            address: '',\n            date: new Date(),\n            image: [],\n        }\n    }\n\n    componentDidMount() {\n        axios.get(process.env.REACT_APP_API_ADD + '/hawkers/' + this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    name: response.data.name,\n                    description: response.data.description,\n                    duration: response.data.duration,\n                    date: new Date(response.data.date),\n                    title_image: response.data.title_image,\n                    image: response.data.image,\n                    address: response.data.address\n                })\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n        console.log(this.state.image);\n\n\n    }\n\n\n    render() {\n\n        var images = this.state.image.map(function (val, index) {\n            return { original: val, thumbnail: val };\n        })\n\n\n        // const images = [\n        //     {\n        //         original: 'https://picsum.photos/id/1018/1000/600/',\n        //         thumbnail: 'https://picsum.photos/id/1018/250/150/',\n        //     },\n        //     {\n        //         original: 'https://picsum.photos/id/1015/1000/600/',\n        //         thumbnail: 'https://picsum.photos/id/1015/250/150/',\n        //     },\n        //     {\n        //         original: 'https://picsum.photos/id/1019/1000/600/',\n        //         thumbnail: 'https://picsum.photos/id/1019/250/150/',\n        //     },\n        // ];\n\n\n        return (\n\n\n            <div>\n\n\n\n                <Row debug>\n                    <Col md={7} debug>\n                        <ImageGallery items={images} />;\n                    </Col>\n\n\n                    <Col md={4} debug> <h1>{this.state.name}</h1>\n                        <h5>{this.state.description}</h5>\n                        <br></br>\n                        <h5>Address: {this.state.address}</h5>\n                    </Col>\n                </Row>\n\n\n\n\n\n\n\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport firebase from \"firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\nimport ImageGallery from 'react-image-gallery';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default class CreateExercise extends React.Component {\n\n\n    constructor(props) {\n        super(props); // must start with this\n\n        // Databinding\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.onChangeTelephone = this.onChangeTelephone.bind(this);\n        this.onChangeDate = this.onChangeDate.bind(this);\n        this.onChangeTitleImage = this.onChangeTitleImage.bind(this);\n        this.onChangeImage = this.onChangeImage.bind(this);\n        this.onChangeAddress = this.onChangeAddress.bind(this);\n\n        this.onSubmit = this.onSubmit.bind(this);\n\n\n        // Variables in React\n        this.state = {\n            name: '',\n            description: '',\n            telephone: '',\n            // title_image: '',\n            address: '',\n            date: new Date(),\n            images: [],\n            image: [],\n            filenames: [],\n            downloadURLs: [],\n            isUploading: false,\n            uploadProgress: 0,\n            success: false\n        }\n\n        console.log(this.state);\n    }\n\n\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeTelephone(e) {\n        this.setState({\n            telephone: e.target.value\n        });\n    }\n\n    onChangeTitleImage(e) {\n        this.setState({\n            title_image: e.target.value\n        });\n    }\n\n    onChangeDescription(e) {\n        this.setState({\n            description: e.target.value\n        });\n    }\n\n    onChangeAddress(e) {\n        this.setState({\n            address: e.target.value\n        });\n    }\n\n\n    onChangeImage(e) {\n        console.log(`on change image called`)\n        this.setState({\n            image: e.target.value\n        });\n\n        this.state.images = this.state.image.map(function (val, index) {\n            return { original: val, thumbnail: val };\n        })\n\n    }\n\n    onChangeDate(date) {\n        this.setState({\n            date: date\n        });\n    }\n\n\n    handleUploadSuccess = async filename => {\n        const downloadURL = await firebase\n            .storage()\n            .ref(\"images\")\n            .child(filename)\n            .getDownloadURL();\n\n        this.setState(oldState => ({\n            filenames: [...oldState.filenames, filename],\n            downloadURLs: [...oldState.downloadURLs, downloadURL],\n            uploadProgress: 100,\n            isUploading: false,\n            image: [...oldState.downloadURLs, downloadURL],\n            images: [...oldState.images, { original: downloadURL, thumbnail: downloadURL }],\n            success: true\n        }));\n\n        console.log(this.state)\n    };\n\n\n    onSubmit(e) {\n        e.preventDefault(); // prevent default html behaviour\n\n        const exercise = {\n            name: this.state.name,\n            description: this.state.description,\n            date: this.state.date,\n            title_image: this.state.title_image,\n            image: this.state.image,\n            address: this.state.address,\n            telephone: this.state.telephone\n        }\n\n        console.log(exercise);\n\n        axios.post(process.env.REACT_APP_API_ADD + '/hawkers', exercise)\n            .then(res => console.log(res.data));\n\n        window.location = '/memories'; // Go back to the list of exercise\n    }\n\n\n    render() {\n        return <div>\n            <h3>Add a hawker store here!</h3>\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                    <label>Name: </label>\n\n                    <input type=\"text\"\n                        required\n                        className=\"form-control\"\n                        value={this.state.name}\n                        onChange={this.onChangeName}\n                    />\n\n                </div>\n                <div className=\"form-group\">\n                    <label>Description: </label>\n                    <input type=\"text\"\n                        required\n                        className=\"form-control\"\n                        value={this.state.description}\n                        onChange={this.onChangeDescription}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Telephone: </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.telephone}\n                        onChange={this.onChangeTelephone}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Address: </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.address}\n                        onChange={this.onChangeAddress}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Date started: </label>\n                    <div>\n                        <DatePicker\n                            selected={this.state.date}\n                            onChange={this.onChangeDate}\n                        />\n                    </div>\n                </div>\n\n\n                {/* <div className=\"form-group\">\n                    <label>Image: </label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.image}\n                        onChange={this.onChangeImage}\n                    />\n                </div> */}\n\n                <div className=\"form-group\">\n                    <label>Title Image: </label>\n                    <FileUploader\n                        accept=\"image/*\"\n                        name=\"image-uploader-multiple\"\n                        randomizeFilename\n                        storageRef={firebase.storage().ref(\"images\")}\n                        onUploadStart={this.handleUploadStart}\n                        onUploadError={this.handleUploadError}\n                        onUploadSuccess={this.handleUploadSuccess}\n                        onProgress={this.handleProgress}\n                        multiple\n                    />\n\n                    <p>Progress: {this.state.uploadProgress}</p>\n\n                    <p>Filenames: {this.state.filenames.join(\", \")}</p>\n\n                    {/* <div>\n                        {this.state.downloadURLs.map((downloadURL, i) => {\n                            return <img key={i} src={downloadURL} />;\n                        })}\n                    </div> */}\n\n                    {this.state.success && <Alert variant=\"success\">\n                        Image successfully uploaded.\n                        {/* <Alert.Link href=\"#\">an example link</Alert.Link>. Give it a click if you */}\n                        {/* like. */}\n                    </Alert>\n                    }\n                    {<ImageGallery items={this.state.images} bulletOnClick={console.log(`test`)} />}\n\n\n\n                </div>\n\n                <div className=\"form-group\">\n                    <input type=\"submit\" value=\"Create Exercise Log\" className=\"btn btn-primary\" />\n                </div>\n            </form>\n        </div>;\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from \"firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\n\nexport default class Navbar extends Component {\n\n    state = {\n        avatar: \"\",\n        isUploading: false,\n        progress: 0,\n        avatarURL: \"\"\n    };\n\n\n    handleUploadSuccess = filename => {\n        this.setState({ avatar: filename, progress: 100, isUploading: false });\n        firebase\n            .storage()\n            .ref(\"images\")\n            .child(filename)\n            .getDownloadURL()\n            .then(url => {\n                this.setState({ url: url });\n                return this.setState({ avatarURL: url });\n            });\n\n        console.log(this.state);\n    };\n\n\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <label>Avatar:</label>\n                    {this.state.isUploading && <p>Progress: {this.state.progress}</p>}\n                    <FileUploader\n                        accept=\"image/*\"\n                        name=\"avatar\"\n                        randomizeFilename\n                        storageRef={firebase.storage().ref(\"images\")}\n                        onUploadStart={this.handleUploadStart}\n                        onUploadError={this.handleUploadError}\n                        onUploadSuccess={this.handleUploadSuccess}\n                        onProgress={this.handleProgress}\n                    />\n\n                    {this.state.avatarURL && <img src={this.state.avatarURL} />}\n\n                </form>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from \"firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\nimport ImageGallery from 'react-image-gallery';\n\n// https://www.npmjs.com/package/react-firebase-file-uploader\nexport default class Navbar extends Component {\n\n\n    state = {\n        filenames: [],\n        downloadURLs: [],\n        isUploading: false,\n        uploadProgress: 0,\n        images: []\n    };\n\n    handleUploadStart = () =>\n        this.setState({\n            isUploading: true,\n            uploadProgress: 0\n        });\n\n    handleProgress = progress =>\n        this.setState({\n            uploadProgress: progress\n        });\n\n    handleUploadError = error => {\n        this.setState({\n            isUploading: false\n            // Todo: handle error\n        });\n        console.error(error);\n    };\n\n    handleUploadSuccess = async filename => {\n        const downloadURL = await firebase\n            .storage()\n            .ref(\"images\")\n            .child(filename)\n            .getDownloadURL();\n\n        this.setState(oldState => ({\n            filenames: [...oldState.filenames, filename],\n            downloadURLs: [...oldState.downloadURLs, downloadURL],\n            images: [...oldState.images, { original: downloadURL, thumbnail: downloadURL }],\n            uploadProgress: 100,\n            isUploading: false\n        }));\n\n        console.log(this.state)\n    };\n\n\n\n\n    render() {\n\n\n\n        return (\n            <div>\n                <FileUploader\n                    accept=\"image/*\"\n                    name=\"image-uploader-multiple\"\n                    randomizeFilename\n                    storageRef={firebase.storage().ref(\"images\")}\n                    onUploadStart={this.handleUploadStart}\n                    onUploadError={this.handleUploadError}\n                    onUploadSuccess={this.handleUploadSuccess}\n                    onProgress={this.handleProgress}\n                    multiple\n                />\n\n                <p>Progress: {this.state.uploadProgress}</p>\n\n                <p>Filenames: {this.state.filenames.join(\", \")}</p>\n\n\n\n                < ImageGallery items={this.state.images} />\n\n\n\n\n            </div>\n        );\n    }\n}","import React from 'react';\n// import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n\n// Components Import Statements\nimport Navbar from \"./components/navbar.component\"\nimport ExercisesList from \"./components/exercises-list.component\";\nimport IndividualHawker from './components/view_individual_hawkers';\nimport AddHawker from './components/add-hawker';\nimport FirebaseUploader from './components/firebase-uploader';\nimport FirebaseUploaderMultiple from './components/firebase-uploader-multiple';\n\n\n\nfunction App() {\n\n\n  return (\n    <Router basename={'memories'}>\n\n      {/* Component Imports */}\n      <Navbar />\n\n      <Route path=\"/\" exact component={ExercisesList} />\n      <Route path=\"/hawkers/:id\" component={IndividualHawker} />\n      <Route path=\"/add-hawker\" exact component={AddHawker} />\n      <Route path=\"/firebase-uploader\" exact component={FirebaseUploader} />\n      <Route path=\"/firebase-uploader-multiple\" exact component={FirebaseUploaderMultiple} />\n\n\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}